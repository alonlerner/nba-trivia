{"version":3,"sources":["heart2.png","Game.js","App.js","reportWebVitals.js","index.js"],"names":["Game","getQuestion","randomTeam","Math","floor","random","randomStats","newQuestion","i","state","pastQuestions","length","team","stat","leader1","leader2","leader3","leader4","a","fetch","then","response","json","result","setState","data","athletes","experience","years","id","push","console","log","setTimeout","athlete","statsSummary","displayName","statistics","value","name","question","teamCode","statsCode","temp","index","array","correctAnswer","wrongAnswer1","wrongAnswer2","wrongAnswer3","ctr","randomAnswers","seconds","notClicked","tempA","concat","lives","questionNum","totalScore","currentQuestionId","gameOver","gameStarted","leaderboard","loadedQuestion","loadedRandomAnswers","bind","handleClick","handleStart","handleNameChange","handleEndGame","handleNewGame","this","fullName","splitCategories","splits","stats","event","target","keyCode","which","clearInterval","myInterval","setInterval","handleTimesUp","textContent","substring","trim","style","backgroundColor","prevState","nextQuestion","toUpperCase","display","src","heart2","width","alt","className","type","minLength","maxLength","placeholder","onChange","onSubmit","onKeyPress","enterPressed","margin","fontWeight","onClick","window","innerWidth","border","borderRadius","padding","color","score","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03e85f53.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/heart2.6ca1547b.png\";","import React from \"react\"\r\nimport heart2 from \"./heart2.png\"\r\n\r\nclass Game extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            lives: 3,\r\n            questionNum: 1,\r\n            totalScore: 0,\r\n            question: {\"question\": \"loading...\", \"correctAnswer\": \"loading...\", \"correctAnswerData\":0, \"wrongAnswer1\": \"loading...\", \"wrongAnswer1Data\":0, \"wrongAnswer2\": \"loading...\", \"wrongAnswer2Data\":0, \"wrongAnswer3\": \"loading...\", \"wrongAnswer3Data\":0 },\r\n            currentQuestionId: 0,\r\n            notClicked: true,\r\n            randomAnswers: [],\r\n            seconds: 2000,\r\n            gameOver: false,\r\n            gameStarted: false,\r\n            name: '',\r\n            leaderboard: [{ \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }],\r\n            teamCode: [\"Atlanta Hawks\", \"Boston Celtics\", \"New Orleans Pelicans\", \"Chicago Bulls\", \"Cleveland Cavaliers\", \"Dallas Mavericks\", \"Denver Nuggets\", \"Detroit Pistons\", \"Golden State Warriors\", \"Houston Rockets\", \"Indiana Pacers\", \"Los Angeles Clippers\", \"Los Angeles Lakers\", \"Miami Heat\", \"Milwaukee Bucks\", \"Minnesota Timberwolves\", \"Brooklyn Nets\", \"New York Knicks\", \"Orlando  Magic\", \"Philadelphia 76ers\", \"Phoenix Suns\", \"Portland Trail Blazers\", \"Sacramento Kings\", \"San Antonio Spurs\", \"Oklahoma City Thunder\", \"Utah Jazz\", \"Washington Wizards\", \"Toronto Raptors\", \"Memphis Grizzlies\", \"Charlotte Hornets\"],\r\n            statsCode: [\"points per game\", \"rebounds per game\", \"assists per game\"],\r\n            data: [{ \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }, { \"fullName\": \"loading...\" }],\r\n            loadedQuestion:[],\r\n            loadedRandomAnswers: [],\r\n            pastQuestions:[]\r\n        }\r\n        this.getQuestion = this.getQuestion.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.handleStart = this.handleStart.bind(this)\r\n        this.handleNameChange = this.handleNameChange.bind(this)\r\n        this.handleEndGame = this.handleEndGame.bind(this)\r\n        this.handleNewGame = this.handleNewGame.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuestion()\r\n        \r\n    }\r\n\r\n    //getQuestion = () => {\r\n    //    const randomTeam = Math.floor(Math.random() * 30) + 1;\r\n    //    console.log(randomTeam)\r\n    //    //let randomStats = Math.floor(Math.random() * 30) + 1;\r\n    //    var i\r\n    //    fetch('https://site.api.espn.com/apis/site/v2/sports/basketball/nba/teams/' + randomTeam)\r\n    //        .then(response => response.json())\r\n    //        .then(response => {\r\n    //            this.setState({ data: response.team.nextEvent[0].competitions[0].competitors[1].leaders })\r\n    //            console.log(this.state.data)\r\n    //            this.setState({ question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": this.state.data[0].leaders[0].athlete.displayName, \"wrongAnswer1\": this.state.data.id, \"wrongAnswer2\": this.state.data.id, \"wrongAnswer3\": this.state.data.id} })\r\n    //        })\r\n    //        .then(response => {\r\n    //            //this.setState({ question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": leader1.name, \"wrongAnswer1\": leader2.name, \"wrongAnswer2\": leader3.name, \"wrongAnswer3\": leader4.name } })\r\n    //            const array = [this.state.question.correctAnswer, this.state.question.wrongAnswer1, this.state.question.wrongAnswer2, this.state.question.wrongAnswer3]\r\n    //            let ctr = array.length, temp, index\r\n    //            while (ctr > 0) {\r\n    //                index = Math.floor(Math.random() * ctr)\r\n    //                ctr--\r\n    //                temp = array[ctr]\r\n    //                array[ctr] = array[index]\r\n    //                array[index] = temp\r\n    //            }\r\n    //            this.setState({ randomAnswers: array })\r\n    //        })\r\n\r\n    //}\r\n\r\n    pipi() {\r\n        const randomTeam = Math.floor(Math.random() * 30) + 1;\r\n\r\n        const randomStats = Math.floor(Math.random() * 3);\r\n        var i, leader1 = { \"name\": \"\", \"data\": 0 }, leader2 = { \"name\": \"\", \"data\": 0 }, leader3 = { \"name\": \"\", \"data\": 0 }, leader4 = { \"name\": \"\", \"data\": 0 }, a = [1]\r\n        fetch('https://site.api.espn.com/apis/site/v2/sports/basketball/nba/teams/' + randomTeam + '/roster')\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                this.setState({ data: response.athletes })\r\n                for (i = 0; i < this.state.data.length - 1; i++) {\r\n                    if (this.state.data[i].experience.years !== 0) {\r\n                        fetch('https://site.web.api.espn.com/apis/common/v3/sports/basketball/nba/athletes/' + this.state.data[i].id + '/splits')\r\n                            .then(response => response.json())\r\n                            .then(response => {\r\n                                a.push({ \"name\": this.state.data[i].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] })\r\n                            })\r\n                    }\r\n                }\r\n            })\r\n        console.log(a)\r\n    }\r\n\r\n    //getQuestion = () => {\r\n    //    const randomTeam = Math.floor(Math.random() * 30) + 1;\r\n\r\n    //    //let randomStats = Math.floor(Math.random() * 30) + 1;\r\n    //    var i, leader1 = { \"name\": \"\", \"data\": 0 }, leader2 = { \"name\": \"\", \"data\": 0 }, leader3 = { \"name\": \"\", \"data\": 0 }, leader4 = { \"name\": \"\", \"data\": 0 }, a = [], f = 0\r\n    //    fetch('https://site.api.espn.com/apis/site/v2/sports/basketball/nba/teams/' + randomTeam + '/roster')\r\n    //        .then(response => response.json())\r\n    //        .then(result => {\r\n    //            this.setState({ data: result.athletes })\r\n    //            while (a.length < result.athletes.length) {\r\n    //                if (this.state.data[a.length].experience.years !== 0) {\r\n    //                    fetch('https://site.web.api.espn.com/apis/common/v3/sports/basketball/nba/athletes/' + result.athletes[a.length].id + '/splits')\r\n    //                        .then(response => response.json())\r\n    //                        .then(response => {\r\n    //                            if (response.filters[1].options[0].value === \"2021\")\r\n    //                                a.push({ \"name\": result.athletes[a.length].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] })\r\n    //                            else\r\n    //                                a.push({ \"name\": result.athletes[a.length].fullName, \"data\": 0 })\r\n    //                            //if (response.splitCategories[0].splits[0].stats[16] > this.state.question.correctAnswerData) {\r\n    //                            //    //this.setState(prevState => {\r\n    //                            //    //    return { question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": this.state.data[i].fullName, \"correctAnswerData\": response.splitCategories[0].splits[0].stats[16], \"wrongAnswer1\": prevState.question.correctAnswer, \"wrongAnswer1Data\": prevState.question.correctAnswerData, \"wrongAnswer2\": prevState.question.wrongAnswer1, \"wrongAnswer2Data\": prevState.question.wrongAnswer1Data, \"wrongAnswer3\": prevState.question.wrongAnswer2, \"wrongAnswer3Data\": prevState.question.wrongAnswer2Data } }\r\n    //                            //    //})\r\n\r\n    //                            //    leader4 = { \"name\": leader3.name, \"data\": leader3.data }\r\n    //                            //    leader3 = { \"name\": leader2.name, \"data\": leader2.data }\r\n    //                            //    leader2 = { \"name\": leader1.name, \"data\": leader1.data }\r\n    //                            //    leader1 = { \"name\": this.state.data[i].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] }\r\n    //                            //}\r\n    //                            //else if (response.splitCategories[0].splits[0].stats[16] > this.state.question.wrongAnswer1Data) {\r\n    //                            //    //this.setState(prevState => {\r\n    //                            //    //    return { question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": prevState.question.correctAnswer, \"correctAnswerData\": prevState.question.correctAnswerData, \"wrongAnswer1\": this.state.data[i].fullName, \"wrongAnswer1Data\": response.splitCategories[0].splits[0].stats[16], \"wrongAnswer2\": prevState.question.wrongAnswer1, \"wrongAnswer2Data\": prevState.question.wrongAnswer1Data, \"wrongAnswer3\": prevState.question.wrongAnswer2, \"wrongAnswer3Data\": prevState.question.wrongAnswer2Data } }\r\n    //                            //    //})\r\n    //                            //    leader4 = { \"name\": leader3.name, \"data\": leader3.data }\r\n    //                            //    leader3 = { \"name\": leader2.name, \"data\": leader2.data }\r\n    //                            //    leader2 = { \"name\": this.state.data[i].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] }\r\n    //                            //}\r\n    //                            //else if (response.splitCategories[0].splits[0].stats[16] > this.state.question.wrongAnswer2Data) {\r\n    //                            //    //this.setState(prevState => {\r\n    //                            //    //    return { question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": prevState.question.correctAnswer, \"correctAnswerData\": prevState.question.correctAnswerData, \"wrongAnswer1\": prevState.question.wrongAnswer1, \"wrongAnswer1Data\": prevState.question.wrongAnswer1Data, \"wrongAnswer2\": this.state.data[i].fullName, \"wrongAnswer2Data\": response.splitCategories[0].splits[0].stats[16], \"wrongAnswer3\": prevState.question.wrongAnswer2, \"wrongAnswer3Data\": prevState.question.wrongAnswer2Data } }\r\n    //                            //    //})\r\n    //                            //    leader4 = { \"name\": leader3.name, \"data\": leader3.data }\r\n    //                            //    leader3 = { \"name\": this.state.data[i].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] }\r\n    //                            //}\r\n    //                            //else if (response.splitCategories[0].splits[0].stats[16] > this.state.question.wrongAnswer3Data) {\r\n    //                            //    //this.setState(prevState => {\r\n    //                            //    //    return { question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": prevState.question.correctAnswer, \"correctAnswerData\": prevState.question.correctAnswerData, \"wrongAnswer1\": prevState.question.wrongAnswer1, \"wrongAnswer1Data\": prevState.question.wrongAnswer1Data, \"wrongAnswer2\": prevState.question.wrongAnswer2, \"wrongAnswer2Data\": prevState.question.wrongAnswer2Data, \"wrongAnswer3\": this.state.data[i].fullName, \"wrongAnswer3Data\": response.splitCategories[0].splits[0].stats[16] } }\r\n    //                            //    //})\r\n    //                            //    leader4 = { \"name\": this.state.data[i].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] }\r\n    //                            //}\r\n    //                        })\r\n    //                }\r\n    //                else\r\n    //                    a.push({ \"name\": result.athletes.fullName, \"data\": 0 })\r\n    //            }\r\n    //        })\r\n    //        .then(() => {\r\n    //            this.setState({ question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": leader1.name, \"wrongAnswer1\": leader2.name, \"wrongAnswer2\": leader3.name, \"wrongAnswer3\": leader4.name } })\r\n    //            console.log(a)\r\n    //            const array = [this.state.question.correctAnswer, this.state.question.wrongAnswer1, this.state.question.wrongAnswer2, this.state.question.wrongAnswer3]\r\n    //            let ctr = array.length, temp, index\r\n    //            while (ctr > 0) {\r\n    //                index = Math.floor(Math.random() * ctr)\r\n    //                ctr--\r\n    //                temp = array[ctr]\r\n    //                array[ctr] = array[index]\r\n    //                array[index] = temp\r\n    //            }\r\n    //            this.setState({ randomAnswers: array })\r\n    //        })\r\n\r\n    //}\r\n\r\n    getQuestion = () => {\r\n        let randomTeam = Math.floor(Math.random() * 30) + 1;\r\n        let randomStats = Math.floor(Math.random() * 3);\r\n        var newQuestion = true, i\r\n        do {\r\n            newQuestion=true\r\n            for (i = 0; i < this.state.pastQuestions.length; i++) {\r\n                if (this.state.pastQuestions[i].team === randomTeam && this.state.pastQuestions[i].stat === randomStats) {\r\n                    randomTeam = Math.floor(Math.random() * 30) + 1\r\n                    randomStats = Math.floor(Math.random() * 3);\r\n                    newQuestion = false\r\n                    break\r\n                }\r\n            }\r\n        } while (!newQuestion)\r\n\r\n\r\n        var i, leader1 = { \"name\": \"\", \"data\": 0 }, leader2 = { \"name\": \"\", \"data\": 0 }, leader3 = { \"name\": \"\", \"data\": 0 }, leader4 = { \"name\": \"\", \"data\": 0 }, a = [], f = 0, a2 = []\r\n        fetch('https://site.api.espn.com/apis/site/v2/sports/basketball/nba/teams/' + randomTeam + '/roster')\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                this.setState({ data: result.athletes })\r\n                for (i = 0; i < result.athletes.length; i++) {\r\n                    if (result.athletes[i].experience.years !== 0) {\r\n                        fetch('https://site.web.api.espn.com/apis/common/v3/sports/basketball/nba/athletes/' + result.athletes[i].id)\r\n                            .then(response => response.json())\r\n                            .then(response => {\r\n                                //console.log(response)\r\n                                a.push(response)\r\n                                //if (response.athlete.statsSummary.displayName === \"2020-21 season stats\")\r\n                                //    a.push({ \"name\": response.athlete.displayName, \"data\": response.athlete.statsSummary.statistics[0].displayValue })\r\n                                \r\n                                //if (response.splitCategories[0].splits[0].stats[16] > this.state.question.correctAnswerData) {\r\n                                //    //this.setState(prevState => {\r\n                                //    //    return { question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": this.state.data[i].fullName, \"correctAnswerData\": response.splitCategories[0].splits[0].stats[16], \"wrongAnswer1\": prevState.question.correctAnswer, \"wrongAnswer1Data\": prevState.question.correctAnswerData, \"wrongAnswer2\": prevState.question.wrongAnswer1, \"wrongAnswer2Data\": prevState.question.wrongAnswer1Data, \"wrongAnswer3\": prevState.question.wrongAnswer2, \"wrongAnswer3Data\": prevState.question.wrongAnswer2Data } }\r\n                                //    //})\r\n\r\n                                //    leader4 = { \"name\": leader3.name, \"data\": leader3.data }\r\n                                //    leader3 = { \"name\": leader2.name, \"data\": leader2.data }\r\n                                //    leader2 = { \"name\": leader1.name, \"data\": leader1.data }\r\n                                //    leader1 = { \"name\": this.state.data[i].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] }\r\n                                //}\r\n                                //else if (response.splitCategories[0].splits[0].stats[16] > this.state.question.wrongAnswer1Data) {\r\n                                //    //this.setState(prevState => {\r\n                                //    //    return { question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": prevState.question.correctAnswer, \"correctAnswerData\": prevState.question.correctAnswerData, \"wrongAnswer1\": this.state.data[i].fullName, \"wrongAnswer1Data\": response.splitCategories[0].splits[0].stats[16], \"wrongAnswer2\": prevState.question.wrongAnswer1, \"wrongAnswer2Data\": prevState.question.wrongAnswer1Data, \"wrongAnswer3\": prevState.question.wrongAnswer2, \"wrongAnswer3Data\": prevState.question.wrongAnswer2Data } }\r\n                                //    //})\r\n                                //    leader4 = { \"name\": leader3.name, \"data\": leader3.data }\r\n                                //    leader3 = { \"name\": leader2.name, \"data\": leader2.data }\r\n                                //    leader2 = { \"name\": this.state.data[i].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] }\r\n                                //}\r\n                                //else if (response.splitCategories[0].splits[0].stats[16] > this.state.question.wrongAnswer2Data) {\r\n                                //    //this.setState(prevState => {\r\n                                //    //    return { question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": prevState.question.correctAnswer, \"correctAnswerData\": prevState.question.correctAnswerData, \"wrongAnswer1\": prevState.question.wrongAnswer1, \"wrongAnswer1Data\": prevState.question.wrongAnswer1Data, \"wrongAnswer2\": this.state.data[i].fullName, \"wrongAnswer2Data\": response.splitCategories[0].splits[0].stats[16], \"wrongAnswer3\": prevState.question.wrongAnswer2, \"wrongAnswer3Data\": prevState.question.wrongAnswer2Data } }\r\n                                //    //})\r\n                                //    leader4 = { \"name\": leader3.name, \"data\": leader3.data }\r\n                                //    leader3 = { \"name\": this.state.data[i].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] }\r\n                                //}\r\n                                //else if (response.splitCategories[0].splits[0].stats[16] > this.state.question.wrongAnswer3Data) {\r\n                                //    //this.setState(prevState => {\r\n                                //    //    return { question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": prevState.question.correctAnswer, \"correctAnswerData\": prevState.question.correctAnswerData, \"wrongAnswer1\": prevState.question.wrongAnswer1, \"wrongAnswer1Data\": prevState.question.wrongAnswer1Data, \"wrongAnswer2\": prevState.question.wrongAnswer2, \"wrongAnswer2Data\": prevState.question.wrongAnswer2Data, \"wrongAnswer3\": this.state.data[i].fullName, \"wrongAnswer3Data\": response.splitCategories[0].splits[0].stats[16] } }\r\n                                //    //})\r\n                                //    leader4 = { \"name\": this.state.data[i].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] }\r\n                                //}\r\n                            })\r\n                    }\r\n                }\r\n            })\r\n            .then(() => {\r\n                console.log(a)\r\n                this.setState({ data: a })\r\n                setTimeout(() => {\r\n                    for (i = 0; i < a.length; i++) {\r\n                        if (a[i].athlete.statsSummary.displayName === \"2020-21 season stats\") {\r\n                            if (a[i].athlete.statsSummary.statistics[randomStats].value >= leader1.data) {\r\n\r\n                                leader4 = { \"name\": leader3.name, \"data\": leader3.data }\r\n                                leader3 = { \"name\": leader2.name, \"data\": leader2.data }\r\n                                leader2 = { \"name\": leader1.name, \"data\": leader1.data }\r\n                                leader1 = { \"name\": a[i].athlete.displayName, \"data\": a[i].athlete.statsSummary.statistics[randomStats].value }\r\n                            }\r\n                            else if (a[i].athlete.statsSummary.statistics[randomStats].value >= leader2.data) {\r\n                                leader4 = { \"name\": leader3.name, \"data\": leader3.data }\r\n                                leader3 = { \"name\": leader2.name, \"data\": leader2.data }\r\n                                leader2 = { \"name\": a[i].athlete.displayName, \"data\": a[i].athlete.statsSummary.statistics[randomStats].value }\r\n                            }\r\n                            else if (a[i].athlete.statsSummary.statistics[randomStats].value >= leader3.data) {\r\n                                leader4 = { \"name\": leader3.name, \"data\": leader3.data }\r\n                                leader3 = { \"name\": a[i].athlete.displayName, \"data\": a[i].athlete.statsSummary.statistics[randomStats].value }\r\n                            }\r\n                            else if (a[i].athlete.statsSummary.statistics[randomStats].value >= leader4.data) {\r\n                                leader4 = { \"name\": a[i].athlete.displayName, \"data\": a[i].athlete.statsSummary.statistics[randomStats].value }\r\n                            }\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        question: {\"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in \" + this.state.statsCode[randomStats]+\"?\", \"correctAnswer\": leader1.name, \"wrongAnswer1\": leader2.name, \"wrongAnswer2\": leader3.name, \"wrongAnswer3\": leader4.name } })\r\n                    const array = [this.state.question.correctAnswer, this.state.question.wrongAnswer1, this.state.question.wrongAnswer2, this.state.question.wrongAnswer3]\r\n                    let ctr = array.length, temp, index\r\n                    while (ctr > 0) {\r\n                        index = Math.floor(Math.random() * ctr)\r\n                        ctr--\r\n                        temp = array[ctr]\r\n                        array[ctr] = array[index]\r\n                        array[index] = temp\r\n                    }\r\n                    this.setState({ randomAnswers: array })\r\n                    this.setState({ seconds: 2000 })\r\n                    this.setState({ notClicked: true })\r\n                    var tempA = this.state.pastQuestions.concat({ \"team\": randomTeam, \"stat\": randomStats })\r\n                    this.setState({ pastQuestions: tempA })\r\n                },1000)\r\n                //this.setState({ question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": leader1.name, \"wrongAnswer1\": leader2.name, \"wrongAnswer2\": leader3.name, \"wrongAnswer3\": leader4.name } })\r\n                console.log(this.state.pastQuestions)\r\n                \r\n            })\r\n\r\n    }\r\n\r\n    //getQuestion = () => {\r\n    //    const randomTeam = Math.floor(Math.random() * 30) + 1;\r\n        \r\n    //    //let randomStats = Math.floor(Math.random() * 30) + 1;\r\n    //    var i, leader1 = { \"name\": \"\", \"data\": 0 }, leader2 = { \"name\": \"\", \"data\": 0 }, leader3 = { \"name\": \"\", \"data\": 0 }, leader4 = { \"name\": \"\", \"data\": 0 },a=[],f=0\r\n    //    fetch('https://site.api.espn.com/apis/site/v2/sports/basketball/nba/teams/' + randomTeam + '/roster')\r\n    //        .then(response => response.json())\r\n    //        .then(result => {\r\n    //            this.setState({ data: result.athletes })\r\n    //            for (i = 0; i < this.state.data.length - 1; i++) {\r\n    //                if (result.athletes[a.length].experience.years !== 0) {\r\n    //                    fetch('https://site.web.api.espn.com/apis/common/v3/sports/basketball/nba/athletes/' + result.athletes[a.length].id + '/splits')\r\n    //                        .then(response => response.json())\r\n    //                        .then(response => {\r\n    //                            if (response.filters[1].options[0].value===\"2021\")\r\n    //                                a.push({ \"name\": result.athletes[a.length].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] })\r\n    //                            else\r\n    //                                a.push({ \"name\": result.athletes[a.length].fullName, \"data\": 0 })\r\n    //                            if (response.splitCategories[0].splits[0].stats[16] > this.state.question.correctAnswerData) {\r\n    //                                //this.setState(prevState => {\r\n    //                                //    return { question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": this.state.data[i].fullName, \"correctAnswerData\": response.splitCategories[0].splits[0].stats[16], \"wrongAnswer1\": prevState.question.correctAnswer, \"wrongAnswer1Data\": prevState.question.correctAnswerData, \"wrongAnswer2\": prevState.question.wrongAnswer1, \"wrongAnswer2Data\": prevState.question.wrongAnswer1Data, \"wrongAnswer3\": prevState.question.wrongAnswer2, \"wrongAnswer3Data\": prevState.question.wrongAnswer2Data } }\r\n    //                                //})\r\n\r\n    //                                leader4 = { \"name\": leader3.name, \"data\": leader3.data }\r\n    //                                leader3 = { \"name\": leader2.name, \"data\": leader2.data }\r\n    //                                leader2 = { \"name\": leader1.name, \"data\": leader1.data }\r\n    //                                leader1 = { \"name\": this.state.data[i].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] }\r\n    //                            }\r\n    //                            else if (response.splitCategories[0].splits[0].stats[16] > this.state.question.wrongAnswer1Data) {\r\n    //                                //this.setState(prevState => {\r\n    //                                //    return { question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": prevState.question.correctAnswer, \"correctAnswerData\": prevState.question.correctAnswerData, \"wrongAnswer1\": this.state.data[i].fullName, \"wrongAnswer1Data\": response.splitCategories[0].splits[0].stats[16], \"wrongAnswer2\": prevState.question.wrongAnswer1, \"wrongAnswer2Data\": prevState.question.wrongAnswer1Data, \"wrongAnswer3\": prevState.question.wrongAnswer2, \"wrongAnswer3Data\": prevState.question.wrongAnswer2Data } }\r\n    //                                //})\r\n    //                                leader4 = { \"name\": leader3.name, \"data\": leader3.data }\r\n    //                                leader3 = { \"name\": leader2.name, \"data\": leader2.data }\r\n    //                                leader2 = { \"name\": this.state.data[i].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] }\r\n    //                            }\r\n    //                            else if (response.splitCategories[0].splits[0].stats[16] > this.state.question.wrongAnswer2Data) {\r\n    //                                //this.setState(prevState => {\r\n    //                                //    return { question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": prevState.question.correctAnswer, \"correctAnswerData\": prevState.question.correctAnswerData, \"wrongAnswer1\": prevState.question.wrongAnswer1, \"wrongAnswer1Data\": prevState.question.wrongAnswer1Data, \"wrongAnswer2\": this.state.data[i].fullName, \"wrongAnswer2Data\": response.splitCategories[0].splits[0].stats[16], \"wrongAnswer3\": prevState.question.wrongAnswer2, \"wrongAnswer3Data\": prevState.question.wrongAnswer2Data } }\r\n    //                                //})\r\n    //                                leader4 = { \"name\": leader3.name, \"data\": leader3.data }\r\n    //                                leader3 = { \"name\": this.state.data[i].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] }\r\n    //                            }\r\n    //                            else if (response.splitCategories[0].splits[0].stats[16] > this.state.question.wrongAnswer3Data) {\r\n    //                                //this.setState(prevState => {\r\n    //                                //    return { question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": prevState.question.correctAnswer, \"correctAnswerData\": prevState.question.correctAnswerData, \"wrongAnswer1\": prevState.question.wrongAnswer1, \"wrongAnswer1Data\": prevState.question.wrongAnswer1Data, \"wrongAnswer2\": prevState.question.wrongAnswer2, \"wrongAnswer2Data\": prevState.question.wrongAnswer2Data, \"wrongAnswer3\": this.state.data[i].fullName, \"wrongAnswer3Data\": response.splitCategories[0].splits[0].stats[16] } }\r\n    //                                //})\r\n    //                                leader4 = { \"name\": this.state.data[i].fullName, \"data\": response.splitCategories[0].splits[0].stats[16] }\r\n    //                            }\r\n    //                        })\r\n    //                }\r\n    //                else\r\n    //                    a.push({ \"name\": result.athletes[a.length].fullName, \"data\": 0 })\r\n    //            }\r\n    //        })\r\n    //        .then(() => {\r\n    //            this.setState({ question: { \"question\": \"Who leads \" + this.state.teamCode[randomTeam - 1] + \" in points per game?\", \"correctAnswer\": leader1.name, \"wrongAnswer1\": leader2.name, \"wrongAnswer2\": leader3.name, \"wrongAnswer3\": leader4.name } })\r\n    //            console.log(a)\r\n    //            const array = [this.state.question.correctAnswer, this.state.question.wrongAnswer1, this.state.question.wrongAnswer2, this.state.question.wrongAnswer3]\r\n    //            let ctr = array.length, temp, index\r\n    //            while (ctr > 0) {\r\n    //                index = Math.floor(Math.random() * ctr)\r\n    //                ctr--\r\n    //                temp = array[ctr]\r\n    //                array[ctr] = array[index]\r\n    //                array[index] = temp\r\n    //            }\r\n    //            this.setState({ randomAnswers: array })\r\n    //        })\r\n\r\n    //}\r\n\r\n    handleNameChange(event) {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n\r\n    enterPressed(event) {\r\n        var code = event.keyCode || event.which\r\n        if (code === 13)\r\n            this.handleStart()\r\n    }\r\n\r\n    handleStart() {\r\n        if (this.state.name.length > 0) {\r\n            this.setState({ gameStarted: true })\r\n            this.setState({ seconds: 2000 })\r\n            clearInterval(this.myInterval)\r\n            this.myInterval = setInterval(() => {\r\n                if (this.state.seconds > -150) {\r\n                    this.setState(({ seconds }) => ({ seconds: seconds - 1 }))\r\n                }\r\n                if (this.state.seconds === 0) {\r\n                    this.handleTimesUp()\r\n                }\r\n            }, 10)\r\n        }\r\n    }\r\n\r\n    handleClick(event) {\r\n        clearInterval(this.myInterval)\r\n        if (event.target.textContent.substring(3).trim() === this.state.question.correctAnswer.trim()) {\r\n            event.target.style.backgroundColor = '#79ff4d'\r\n            this.setState(({ totalScore }) => ({ totalScore: totalScore + Math.floor(this.state.seconds / 20) }))\r\n        }\r\n\r\n        else {\r\n            event.target.style.backgroundColor = '#ff4000'\r\n            this.setState((prevState) => {\r\n                return { lives: prevState.lives - 1 }\r\n            })\r\n        }\r\n        this.setState({ notClicked: false })\r\n        \r\n        setTimeout(() => {\r\n\r\n            if (this.state.lives === 0 || this.state.questionNum === this.state.teamCode * this.state.statsCode) {\r\n                this.handleEndGame()\r\n            }\r\n            else {\r\n                this.nextQuestion()\r\n            }\r\n        }, 1500)\r\n\r\n\r\n    }\r\n\r\n    handleTimesUp() {\r\n        clearInterval(this.myInterval)\r\n        this.setState(({ lives }) => ({ lives: lives - 1 }))\r\n        \r\n        setTimeout(() => {\r\n            if (this.state.lives === 0 || this.state.questionNum === this.state.teamCode * this.state.statsCode) {\r\n                this.handleEndGame()\r\n            }\r\n            else {\r\n                this.nextQuestion()\r\n            }\r\n        }, 3000)\r\n    }\r\n\r\n    nextQuestion() {\r\n        //this.setState({ notClicked: true })\r\n        this.getQuestion()\r\n        //this.setState({ seconds: 2000 })\r\n        setTimeout(() => {\r\n            this.setState(({ questionNum }) => ({ questionNum: questionNum + 1 }))\r\n            this.setState(({ currentQuestionId }) => ({ currentQuestionId: currentQuestionId + 1 }))\r\n            this.myInterval = setInterval(() => {\r\n                if (this.state.seconds > -150) {\r\n                    this.setState(({ seconds }) => ({ seconds: seconds - 1 }))\r\n                }\r\n                if (this.state.seconds === -150) {\r\n                    this.handleTimesUp()\r\n                }\r\n            }, 10)\r\n        },1000)\r\n    }\r\n\r\n    handleEndGame() {\r\n        this.setState({\r\n            question: null,\r\n        })\r\n        this.setState({ gameOver: true })\r\n        fetch(`https://tlmy7kec05.execute-api.us-east-2.amazonaws.com/Prod/addnbascore?name=${this.state.name.toUpperCase().trim()}&score=${this.state.totalScore}`)\r\n        this.setState({ seconds: 1 })\r\n        this.myInterval = setInterval(() => {\r\n            if (this.state.seconds > 0) {\r\n                this.setState(({ seconds }) => ({ seconds: seconds - 1 }))\r\n            }\r\n            if (this.state.seconds === 0) {\r\n                fetch('https://tlmy7kec05.execute-api.us-east-2.amazonaws.com/Prod/nbaleaderboard')\r\n                    .then(response => response.json())\r\n                    .then(response => this.setState({ leaderboard: response }))\r\n                fetch('https://tlmy7kec05.execute-api.us-east-2.amazonaws.com/Prod/deletenbascore')\r\n                this.setState(({ seconds }) => ({ seconds: seconds - 1 }))\r\n                clearInterval(this.myInterval)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    //handleEndGame() {\r\n    //    this.setState({\r\n    //        question: null,\r\n    //    })\r\n    //    this.setState({ gameOver: true })\r\n    //    fetch(`https://tlmy7kec05.execute-api.us-east-2.amazonaws.com/Prod/addnbascore?name=${this.state.name.toUpperCase().trim()}&score=${this.state.totalScore}`)\r\n    //    //fetch('https://tlmy7kec05.execute-api.us-east-2.amazonaws.com/Prod/nbaleaderboard')\r\n    //    //    .then(response => response.json())\r\n    //    //    .then(response => this.setState({ leaderboard: response }))\r\n    //    this.setState({ seconds: 1 })\r\n    //    this.myInterval = setInterval(() => {\r\n    //        if (this.state.seconds > 0) {\r\n    //            this.setState(({ seconds }) => ({ seconds: seconds - 1 }))\r\n    //        }\r\n    //        if (this.state.seconds === 0) {\r\n    //            fetch('https://tlmy7kec05.execute-api.us-east-2.amazonaws.com/Prod/nbaleaderboard')\r\n    //                .then(response => response.json())\r\n    //                .then(response => this.setState({ leaderboard: response }))\r\n    //            fetch('https://tlmy7kec05.execute-api.us-east-2.amazonaws.com/Prod/deletenbascore')\r\n    //            this.setState(({ seconds }) => ({ seconds: seconds - 1 }))\r\n    //            clearInterval(this.myInterval)\r\n    //        }\r\n    //    }, 1000)\r\n    //}\r\n\r\n    handleNewGame() {\r\n        this.setState({\r\n            lives: 3,\r\n            questionNum: 1,\r\n            totalScore: 0,\r\n            question: {\"question\": \"loading...\", \"correctAnswer\": \"loading...\", \"wrongAnswer1\": \"loading...\", \"wrongAnswer2\": \"loading...\", \"wrongAnswer3\": \"loading...\" },\r\n            currentQuestionId: 0,\r\n            notClicked: true,\r\n            randomAnswers: [],\r\n            seconds: 2000,\r\n            gameOver: false,\r\n            gameStarted: false,\r\n            name: '',\r\n            leaderboard: [{ \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }, { \"name\": \"loading...\", \"score\": \"n/a\" }]\r\n        })\r\n        this.getQuestion()\r\n    }\r\n\r\n    displayLives() {\r\n        let i\r\n        for (i = 0; i < this.state.lives; i++) {\r\n            return (<div style={{ display: \"inline-block\" }}><img src={heart2} width=\"40px\" alt=\"error\" /></div>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div style={{ display: this.state.gameStarted ? \"none\" : \"block\" }}>\r\n                    <h1 className=\"headline-njit\" >NBA</h1>\r\n                    <h1 className=\"headline-snd\" >Statistics</h1>\r\n                    <h1 className=\"headline\" >Trivia Game</h1>\r\n                    <input className=\"name-input\" type=\"text\" minLength=\"1\" maxLength=\"10\" placeholder=\"Enter your name\" value={this.state.name} onChange={this.handleNameChange} onSubmit={this.handleStart} onKeyPress={this.enterPressed.bind(this)} style={{ width: 200, margin: \"1rem auto\", fontWeight: \"bold\" }} />\r\n                    <div className=\"start-button\" onClick={this.handleStart}>start!</div>\r\n                </div>\r\n                <div style={{ display: this.state.question && this.state.gameStarted ? \"block\" : \"none\" }}>\r\n                    <table style={{ display: this.state.question && this.state.gameStarted ? \"block\" : \"none\" }} className=\"table-bar\" >\r\n                        <tr>\r\n                            <td className=\"td-bar\">{this.state.totalScore}</td>\r\n                            <td className=\"td-bar\">Question {this.state.questionNum}</td>\r\n                            <td className=\"td-bar\">{this.state.seconds > 0 ? (this.state.seconds / 100 | 0) + 1 : \"Time's up!\"}</td>\r\n                            <td className=\"td-bar\">\r\n                                <div>\r\n                                    <div style={{ display: this.state.lives > 0 ? \"inline-block\" : \"none\" }}><img src={heart2} width=\"25rem\" alt=\"error\" /></div>\r\n                                    <div style={{ display: this.state.lives > 1 ? \"inline-block\" : \"none\" }}><img src={heart2} width=\"25rem\" alt=\"error\" /></div>\r\n                                    <div style={{ display: this.state.lives > 2 ? \"inline-block\" : \"none\" }}><img src={heart2} width={window.innerWidth > 900 ? \"25rem\" : \"25rem\"} alt=\"error\" /></div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <br style={{ display: this.state.question && this.state.seconds > -150 ? \"block\" : \"none\" }} />\r\n                    <div className=\"question\" style={{ display: this.state.question && this.state.seconds > -150 ? \"block\" : \"none\" }}>{this.state.question && this.state.question.question}</div>\r\n                    <br style={{ display: this.state.question && this.state.seconds > -150 ? \"block\" : \"none\" }} />\r\n                    <div className=\"div-answer\" onClick={this.state.notClicked && this.state.seconds > 0 && this.handleClick} style={{ display: this.state.question && this.state.seconds > -150 ? \"block\" : \"none\", backgroundColor: this.state.seconds === 2000 && '' }}> A: {this.state.question && this.state.randomAnswers[0]}</div>\r\n                    <br style={{ display: this.state.question && this.state.seconds > -150 ? \"block\" : \"none\" }} />\r\n                    <div className=\"div-answer\" onClick={this.state.notClicked && this.state.seconds > 0 && this.handleClick} style={{ display: this.state.question && this.state.seconds > -150 ? \"block\" : \"none\", backgroundColor: this.state.seconds === 2000 && '' }}>B: {this.state.question && this.state.randomAnswers[1]}</div>\r\n                    <br style={{ display: this.state.question && this.state.seconds > -150 ? \"block\" : \"none\" }} />\r\n                    <div className=\"div-answer\" onClick={this.state.notClicked && this.state.seconds > 0 && this.handleClick} style={{ display: this.state.question && this.state.seconds > -150 ? \"block\" : \"none\", backgroundColor: this.state.seconds === 2000 && '' }}>C: {this.state.question && this.state.randomAnswers[2]}</div>\r\n                    <br style={{ display: this.state.question && this.state.seconds > -150 ? \"block\" : \"none\" }} />\r\n                    <div className=\"div-answer\" onClick={this.state.notClicked && this.state.seconds > 0 && this.handleClick} style={{ display: this.state.question && this.state.seconds > -150 ? \"block\" : \"none\", backgroundColor: this.state.seconds === 2000 && '' }}>D: {this.state.question && this.state.randomAnswers[3]}</div>\r\n                    <br style={{ display: this.state.question && this.state.seconds > -150 ? \"block\" : \"none\" }} />\r\n                </div>\r\n                <div style={{ display: this.state.gameOver && this.state.gameStarted && (!this.state.question) ? \"block\" : \"none\" }}>\r\n                    <h1 className=\"final-score\" style={{ display: this.state.gameOver ? \"block\" : \"none\" }}>Final Score: {this.state.totalScore}</h1>\r\n                    <h1 className=\"leaderboard-headline\">Top 10 leaderboard</h1>\r\n                    <table className=\"leaderboard-table\" style={{ display: this.state.leaderboard ? \"block\" : \"none\", backgroundColor: \"#e6e6e6\", width: \"19rem\", margin: \"1rem auto\", border: \"1px solid black\", borderRadius: 25, padding: \"1rem\" }}>\r\n                        <tr>\r\n                            <td style={{ width: \"2rem\" }}>#</td>\r\n                            <td style={{ width: \"10rem\" }}>name</td>\r\n                            <td style={{ width: \"5rem\" }}>score</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 0 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 0 && this.state.name.toUpperCase().trim() === this.state.leaderboard[0].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>1</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 0 && this.state.name.toUpperCase().trim() === this.state.leaderboard[0].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 0 && this.state.leaderboard[0].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 0 && this.state.name.toUpperCase().trim() === this.state.leaderboard[0].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 0 && this.state.leaderboard[0].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 1 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 1 && this.state.name.toUpperCase().trim() === this.state.leaderboard[1].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>2</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 1 && this.state.name.toUpperCase().trim() === this.state.leaderboard[1].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 1 && this.state.leaderboard[1].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 1 && this.state.name.toUpperCase().trim() === this.state.leaderboard[1].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 1 && this.state.leaderboard[1].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 2 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 2 && this.state.name.toUpperCase().trim() === this.state.leaderboard[2].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>3</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 2 && this.state.name.toUpperCase().trim() === this.state.leaderboard[2].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 2 && this.state.leaderboard[2].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 2 && this.state.name.toUpperCase().trim() === this.state.leaderboard[2].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 2 && this.state.leaderboard[2].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 3 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 3 && this.state.name.toUpperCase().trim() === this.state.leaderboard[3].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>4</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 3 && this.state.name.toUpperCase().trim() === this.state.leaderboard[3].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 3 && this.state.leaderboard[3].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 3 && this.state.name.toUpperCase().trim() === this.state.leaderboard[3].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 3 && this.state.leaderboard[3].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 4 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 4 && this.state.name.toUpperCase().trim() === this.state.leaderboard[4].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>5</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 4 && this.state.name.toUpperCase().trim() === this.state.leaderboard[4].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 4 && this.state.leaderboard[4].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 4 && this.state.name.toUpperCase().trim() === this.state.leaderboard[4].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 4 && this.state.leaderboard[4].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 5 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 5 && this.state.name.toUpperCase().trim() === this.state.leaderboard[5].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>6</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 5 && this.state.name.toUpperCase().trim() === this.state.leaderboard[5].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 5 && this.state.leaderboard[5].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 5 && this.state.name.toUpperCase().trim() === this.state.leaderboard[5].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 5 && this.state.leaderboard[5].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 6 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 6 && this.state.name.toUpperCase().trim() === this.state.leaderboard[6].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>7</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 6 && this.state.name.toUpperCase().trim() === this.state.leaderboard[6].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 6 && this.state.leaderboard[6].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 6 && this.state.name.toUpperCase().trim() === this.state.leaderboard[6].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 6 && this.state.leaderboard[6].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 7 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 7 && this.state.name.toUpperCase().trim() === this.state.leaderboard[7].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>8</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 7 && this.state.name.toUpperCase().trim() === this.state.leaderboard[7].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 7 && this.state.leaderboard[7].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 7 && this.state.name.toUpperCase().trim() === this.state.leaderboard[7].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 7 && this.state.leaderboard[7].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 8 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 8 && this.state.name.toUpperCase().trim() === this.state.leaderboard[8].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>9</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 8 && this.state.name.toUpperCase().trim() === this.state.leaderboard[8].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 8 && this.state.leaderboard[8].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 8 && this.state.name.toUpperCase().trim() === this.state.leaderboard[8].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 8 && this.state.leaderboard[8].score}</td>\r\n                        </tr>\r\n                        <tr style={{ display: this.state.leaderboard.length > 9 ? \"block\" : \"none\" }}>\r\n                            <td style={{ color: this.state.leaderboard.length > 9 && this.state.name.toUpperCase().trim() === this.state.leaderboard[9].name.toUpperCase().trim() && \"red\", width: \"2rem\" }}>10</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 9 && this.state.name.toUpperCase().trim() === this.state.leaderboard[9].name.toUpperCase().trim() && \"red\", width: \"10rem\" }}>{this.state.leaderboard.length > 9 && this.state.leaderboard[9].name}</td>\r\n                            <td style={{ color: this.state.leaderboard.length > 9 && this.state.name.toUpperCase().trim() === this.state.leaderboard[9].name.toUpperCase().trim() && \"red\", width: \"5rem\" }}>{this.state.leaderboard.length > 9 && this.state.leaderboard[9].score}</td>\r\n                        </tr>\r\n                    </table>\r\n                    <div className=\"start-button\" onClick={this.handleNewGame}>play agian!</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game","import './App.css';\nimport Game from './Game';\r\n\nfunction App() {\n  return (\n      <div className=\"App\">\n          <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}